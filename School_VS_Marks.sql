CREATE DATABASE EDUCATION;
USE EDUCATION;

CREATE TABLE SCHOOLS(SCHOOL_ID INT,SCHOOL_NAME STRING)
ROW FORMAT DELIMITED
FIELDS TERMINATED BY ','
STORED AS TEXTFILE
tblproperties("skip.header.line.count"="1");

LOAD DATA LOCAL INPATH '/home/cloudera/Sumit_Works/Hadoop/Hive/DataSets/schools.csv' OVERWRITE INTO TABLE SCHOOLS;

CREATE TABLE SCHOOLS_MARKS(SCHOOL_ID INT,EXAM STRING,MARKS FLOAT,YEAR INT)
ROW FORMAT DELIMITED
FIELDS TERMINATED BY ','
STORED AS TEXTFILE
TBLPROPERTIES("skip.header.line.count"="1");

LOAD DATA LOCAL INPATH '/home/cloudera/Sumit_Works/Hadoop/Hive/DataSets/school_marks_year.csv' OVERWRITE INTO TABLE SCHOOLS_MARKS;

SET hive.exec.dynamic.partition=true;
SET hive.exec.dynamic.partition.mode=non-strict;

CREATE TABLE MARKS_SAMPLING(SCHOOL_ID INT,EXAM STRING,MARKS FLOAT) PARTITIONED BY (SCHOOL_NAME STRING,YEAR INT);

INSERT INTO TABLE MARKS_SAMPLING PARTITION(SCHOOL_NAME,YEAR) SELECT A.SCHOOL_ID,B.EXAM,B.MARKS,A.SCHOOL_NAME,B.YEAR FROM SCHOOLS A JOIN SCHOOLS_MARKS B ON A.SCHOOL_ID = B.SCHOOL_ID;

CREATE TABLE MARKS_SAMPLING1(SCHOOL_ID INT,EXAM STRING,MARKS FLOAT,SCHOOL_NAME STRING,YEAR INT) 
ROW FORMAT DELIMITED
FIELDS TERMINATED BY ','
;

INSERT INTO TABLE MARKS_SAMPLING1 SELECT A.SCHOOL_ID,B.EXAM,B.MARKS,A.SCHOOL_NAME,B.YEAR FROM SCHOOLS A JOIN SCHOOLS_MARKS B ON A.SCHOOL_ID = B.SCHOOL_ID;

SET hive.enforce.bucketing=true;
CREATE TABLE MARKS_SAMPLING_BUCKET(SCHOOL_ID INT,EXAM STRING,SCHOOL_NAME STRING,MARKS FLOAT,YEAR INT) CLUSTERED BY (MARKS) INTO 4 BUCKETS
ROW FORMAT DELIMITED
FIELDS TERMINATED BY ',';

INSERT INTO MARKS_SAMPLING_BUCKET SELECT A.SCHOOL_ID,B.EXAM,A.SCHOOL_NAME,B.MARKS,B.YEAR FROM SCHOOLS A JOIN SCHOOLS_MARKS B ON A.SCHOOL_ID = B.SCHOOL_ID; 

CREATE TABLE MARKS_SAMPLING_PARTI_BUCKET (SCHOOL_ID INT,EXAM STRING,MARKS FLOAT) PARTITIONED BY (SCHOOL_NAME STRING,YEAR INT) CLUSTERED BY (MARKS) INTO 6 BUCKETS
ROW FORMAT DELIMITED
FIELDS TERMINATED BY ','
;

INSERT INTO TABLE MARKS_SAMPLING_PARTI_BUCKET PARTITION(SCHOOL_NAME,YEAR) 
SELECT A.SCHOOL_ID,B.EXAM,B.MARKS,A.SCHOOL_NAME,B.YEAR FROM SCHOOLS A JOIN SCHOOLS_MARKS B ON A.SCHOOL_ID = B.SCHOOL_ID;

CREATE TABLE MARKS_SAMPLING_PARTI_BUCKET_SAME (SCHOOL_ID INT,EXAM STRING,MARKS FLOAT) PARTITIONED BY (SCHOOL_NAME STRING,YEAR INT)
ROW FORMAT DELIMITED
FIELDS TERMINATED BY ',';

INSERT INTO TABLE MARKS_SAMPLING_PARTI_BUCKET_SAME PARTITION(SCHOOL_NAME,YEAR) 
SELECT A.SCHOOL_ID,B.EXAM,B.MARKS,A.SCHOOL_NAME,B.YEAR FROM SCHOOLS A JOIN SCHOOLS_MARKS B ON A.SCHOOL_ID = B.SCHOOL_ID;

--No of Buckets more than No of ROWS
SELECT COUNT(1) FROM SCHOOLS A JOIN SCHOOLS_MARKS B ON A.SCHOOL_ID = B.SCHOOL_ID;

CREATE TABLE MARKS_SAMPLING_MORE_BUCKETS(SCHOOL_ID INT,SCHOOL_NAME STRING,EXAM STRING,MARKS FLOAT,YEAR INT) CLUSTERED BY (YEAR) INTO 120 BUCKETS;
INSERT INTO TABLE MARKS_SAMPLING_MORE_BUCKETS SELECT A.SCHOOL_ID,A.SCHOOL_NAME,B.EXAM,B.MARKS,B.YEAR FROM SCHOOLS A JOIN SCHOOLS_MARKS B ON A.SCHOOL_ID = B.SCHOOL_ID;

CREATE EXTERNAL TABLE STUDENT(SRL INT,NAME STRING,AGE INT,SECTION STRING,ROLL_NO INT) 
PARTITIONED BY (CLASS STRING)
ROW FORMAT DELIMITED 
FIELDS TERMINATED BY ','
LOCATION '/user/hive/datasets/student'
TBLPROPERTIES("skip.header.line.count"="1");
ALTER TABLE STUDENT ADD PARTITION(class='VI');


-- POC on External Table
CREATE EXTERNAL TABLE SCHOOLS_EXT(SCHOOL_ID INT,SCHOOL_NAME STRING)
ROW FORMAT DELIMITED
FIELDS TERMINATED BY ','
STORED AS TEXTFILE
LOCATION '/user/hive/datasets/schools'
tblproperties("skip.header.line.count"="1");

--select * from SCHOOLS_EXT WHERE INPUT__FILE__NAME LIKE '%schools.csv';

--WITH SERDEPROPERTIES ("input.regex" = "schools.csv")


CREATE EXTERNAL TABLE SCHOOLS_MARKS_EXT(SCHOOL_ID INT,EXAM STRING,MARKS FLOAT,YEAR INT)
ROW FORMAT DELIMITED
FIELDS TERMINATED BY ','
STORED AS TEXTFILE
LOCATION '/user/hive/datasets/school_marks_year'
TBLPROPERTIES("skip.header.line.count"="1")
;